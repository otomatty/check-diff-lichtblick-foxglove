--- create-foxglove-extension/template/src/ExamplePanel.tsx	2025-07-14 12:23:17
+++ create-lichtblick-extension/template/src/ExamplePanel.tsx	2025-07-14 12:23:42
@@ -1,4 +1,4 @@
-import { Immutable, MessageEvent, PanelExtensionContext, Topic } from "@foxglove/extension";
+import { Immutable, MessageEvent, PanelExtensionContext, Topic } from "@lichtblick/suite";
 import { ReactElement, useEffect, useLayoutEffect, useState } from "react";
 import { createRoot } from "react-dom/client";
 
@@ -10,7 +10,7 @@
 
   // We use a layout effect to setup render handling for our panel. We also setup some topic subscriptions.
   useLayoutEffect(() => {
-    // The render handler is run by the broader Foxglove system during playback when your panel
+    // The render handler is run by the broader studio system during playback when your panel
     // needs to render because the fields it is watching have changed. How you handle rendering depends on your framework.
     // You can only setup one render handler - usually early on in setting up your panel.
     //
@@ -20,7 +20,7 @@
     context.onRender = (renderState, done) => {
       // render functions receive a _done_ callback. You MUST call this callback to indicate your panel has finished rendering.
       // Your panel will not receive another render callback until _done_ is called from a prior render. If your panel is not done
-      // rendering before the next render call, Foxglove shows a notification to the user that your panel is delayed.
+      // rendering before the next render call, studio shows a notification to the user that your panel is delayed.
       //
       // Set the done callback into a state variable to trigger a re-render.
       setRenderDone(() => done);
@@ -56,13 +56,6 @@
   return (
     <div style={{ padding: "1rem" }}>
       <h2>Welcome to your new extension panel!</h2>
-      <p>
-        Check the{" "}
-        <a href="https://docs.foxglove.dev/docs/visualization/extensions/introduction">
-          documentation
-        </a>{" "}
-        for more details on building extension panels for Foxglove.
-      </p>
       <div style={{ display: "grid", gridTemplateColumns: "1fr 1fr", rowGap: "0.2rem" }}>
         <b style={{ borderBottom: "1px solid" }}>Topic</b>
         <b style={{ borderBottom: "1px solid" }}>Schema name</b>
